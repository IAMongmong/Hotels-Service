name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - unit_test

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: travel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Set up environment variables
        run: |
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_USER=root" >> .env
          echo "DB_PASSWORD=123456" >> .env
          echo "DB_NAME=travel" >> .env

      - name: Start MySQL container (via Docker Compose)
        run: |
          docker-compose -f docker-compose.yml up -d
        # 假設 docker-compose.yml 中包含啟動 mysql 服務的設置

      - name: Wait for MySQL to be ready
        run: |
          docker exec -t <container_name> mysqladmin -u root -p123456 ping --silent
          
      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t hotels-service -f dockerfiles/app-dockerfile .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag hotels-service ${{ secrets.DOCKER_USERNAME }}/hotels-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/hotels-service:latest

      - name: Deploy to server
        run: |
          ssh user@your-server "docker pull ${{ secrets.DOCKER_USERNAME }}/hotels-service:latest && docker-compose up -d"
